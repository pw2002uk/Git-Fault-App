'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Main")>  _
Partial Public Class DonDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMain(instance As Main)
    End Sub
  Partial Private Sub UpdateMain(instance As Main)
    End Sub
  Partial Private Sub DeleteMain(instance As Main)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("ConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Mains() As System.Data.Linq.Table(Of Main)
		Get
			Return Me.GetTable(Of Main)
		End Get
	End Property
	
	Public ReadOnly Property Data_Bits() As System.Data.Linq.Table(Of Data_Bit)
		Get
			Return Me.GetTable(Of Data_Bit)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Main")>  _
Partial Public Class Main
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Aircraft_Type As String
	
	Private _System_Name As String
	
	Private _Label As String
	
	Private _Hex_Fault_Code As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAircraft_TypeChanging(value As String)
    End Sub
    Partial Private Sub OnAircraft_TypeChanged()
    End Sub
    Partial Private Sub OnSystem_NameChanging(value As String)
    End Sub
    Partial Private Sub OnSystem_NameChanged()
    End Sub
    Partial Private Sub OnLabelChanging(value As String)
    End Sub
    Partial Private Sub OnLabelChanged()
    End Sub
    Partial Private Sub OnHex_Fault_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnHex_Fault_CodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aircraft_Type", DbType:="VarChar(100)")>  _
	Public Property Aircraft_Type() As String
		Get
			Return Me._Aircraft_Type
		End Get
		Set
			If (String.Equals(Me._Aircraft_Type, value) = false) Then
				Me.OnAircraft_TypeChanging(value)
				Me.SendPropertyChanging
				Me._Aircraft_Type = value
				Me.SendPropertyChanged("Aircraft_Type")
				Me.OnAircraft_TypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_System_Name", DbType:="VarChar(250)")>  _
	Public Property System_Name() As String
		Get
			Return Me._System_Name
		End Get
		Set
			If (String.Equals(Me._System_Name, value) = false) Then
				Me.OnSystem_NameChanging(value)
				Me.SendPropertyChanging
				Me._System_Name = value
				Me.SendPropertyChanged("System_Name")
				Me.OnSystem_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Label", DbType:="VarChar(50)")>  _
	Public Property Label() As String
		Get
			Return Me._Label
		End Get
		Set
			If (String.Equals(Me._Label, value) = false) Then
				Me.OnLabelChanging(value)
				Me.SendPropertyChanging
				Me._Label = value
				Me.SendPropertyChanged("Label")
				Me.OnLabelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hex_Fault_Code", DbType:="VarChar(50)")>  _
	Public Property Hex_Fault_Code() As String
		Get
			Return Me._Hex_Fault_Code
		End Get
		Set
			If (String.Equals(Me._Hex_Fault_Code, value) = false) Then
				Me.OnHex_Fault_CodeChanging(value)
				Me.SendPropertyChanging
				Me._Hex_Fault_Code = value
				Me.SendPropertyChanged("Hex_Fault_Code")
				Me.OnHex_Fault_CodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Data_Bits")>  _
Partial Public Class Data_Bit
	
	Private _FK_ID As System.Nullable(Of Integer)
	
	Private _Bit9_SDI As String
	
	Private _Bit10_SDI As String
	
	Private _Bit11_Data As String
	
	Private _Bit12_Data As String
	
	Private _Bit13_Data As String
	
	Private _Bit14_Data As String
	
	Private _Bit15_Data As String
	
	Private _Bit16_Data As String
	
	Private _Bit17_Data As String
	
	Private _Bit18_Data As String
	
	Private _Bit19_Data As String
	
	Private _Bit20_Data As String
	
	Private _Bit21_Data As String
	
	Private _Bit22_Data As String
	
	Private _Bit23_Data As String
	
	Private _Bit24_Data As String
	
	Private _Bit25_Data As String
	
	Private _Bit26_Data As String
	
	Private _Bit27_Data As String
	
	Private _Bit28_Data As String
	
	Private _Bit29_Data As String
	
	Private _Bit30_SSM As String
	
	Private _Bit31_SSM As String
	
	Private _Bit32_Parity As String
	
	Private _SDI_Option0 As String
	
	Private _SDI_Option1 As String
	
	Private _SDI_Option2 As String
	
	Private _SDI_Option3 As String
	
	Private _SSM_Option0 As String
	
	Private _SSM_Option1 As String
	
	Private _SSM_Option2 As String
	
	Private _SSM_Option3 As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ID", DbType:="Int")>  _
	Public Property FK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_ID
		End Get
		Set
			If (Me._FK_ID.Equals(value) = false) Then
				Me._FK_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit9_SDI", DbType:="VarChar(500)")>  _
	Public Property Bit9_SDI() As String
		Get
			Return Me._Bit9_SDI
		End Get
		Set
			If (String.Equals(Me._Bit9_SDI, value) = false) Then
				Me._Bit9_SDI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit10_SDI", DbType:="VarChar(500)")>  _
	Public Property Bit10_SDI() As String
		Get
			Return Me._Bit10_SDI
		End Get
		Set
			If (String.Equals(Me._Bit10_SDI, value) = false) Then
				Me._Bit10_SDI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit11_Data", DbType:="VarChar(500)")>  _
	Public Property Bit11_Data() As String
		Get
			Return Me._Bit11_Data
		End Get
		Set
			If (String.Equals(Me._Bit11_Data, value) = false) Then
				Me._Bit11_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit12_Data", DbType:="VarChar(500)")>  _
	Public Property Bit12_Data() As String
		Get
			Return Me._Bit12_Data
		End Get
		Set
			If (String.Equals(Me._Bit12_Data, value) = false) Then
				Me._Bit12_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit13_Data", DbType:="VarChar(500)")>  _
	Public Property Bit13_Data() As String
		Get
			Return Me._Bit13_Data
		End Get
		Set
			If (String.Equals(Me._Bit13_Data, value) = false) Then
				Me._Bit13_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit14_Data", DbType:="VarChar(50)")>  _
	Public Property Bit14_Data() As String
		Get
			Return Me._Bit14_Data
		End Get
		Set
			If (String.Equals(Me._Bit14_Data, value) = false) Then
				Me._Bit14_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit15_Data", DbType:="VarChar(500)")>  _
	Public Property Bit15_Data() As String
		Get
			Return Me._Bit15_Data
		End Get
		Set
			If (String.Equals(Me._Bit15_Data, value) = false) Then
				Me._Bit15_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit16_Data", DbType:="VarChar(500)")>  _
	Public Property Bit16_Data() As String
		Get
			Return Me._Bit16_Data
		End Get
		Set
			If (String.Equals(Me._Bit16_Data, value) = false) Then
				Me._Bit16_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit17_Data", DbType:="VarChar(500)")>  _
	Public Property Bit17_Data() As String
		Get
			Return Me._Bit17_Data
		End Get
		Set
			If (String.Equals(Me._Bit17_Data, value) = false) Then
				Me._Bit17_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit18_Data", DbType:="VarChar(500)")>  _
	Public Property Bit18_Data() As String
		Get
			Return Me._Bit18_Data
		End Get
		Set
			If (String.Equals(Me._Bit18_Data, value) = false) Then
				Me._Bit18_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit19_Data", DbType:="VarChar(500)")>  _
	Public Property Bit19_Data() As String
		Get
			Return Me._Bit19_Data
		End Get
		Set
			If (String.Equals(Me._Bit19_Data, value) = false) Then
				Me._Bit19_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit20_Data", DbType:="VarChar(500)")>  _
	Public Property Bit20_Data() As String
		Get
			Return Me._Bit20_Data
		End Get
		Set
			If (String.Equals(Me._Bit20_Data, value) = false) Then
				Me._Bit20_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit21_Data", DbType:="VarChar(500)")>  _
	Public Property Bit21_Data() As String
		Get
			Return Me._Bit21_Data
		End Get
		Set
			If (String.Equals(Me._Bit21_Data, value) = false) Then
				Me._Bit21_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit22_Data", DbType:="VarChar(500)")>  _
	Public Property Bit22_Data() As String
		Get
			Return Me._Bit22_Data
		End Get
		Set
			If (String.Equals(Me._Bit22_Data, value) = false) Then
				Me._Bit22_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit23_Data", DbType:="VarChar(500)")>  _
	Public Property Bit23_Data() As String
		Get
			Return Me._Bit23_Data
		End Get
		Set
			If (String.Equals(Me._Bit23_Data, value) = false) Then
				Me._Bit23_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit24_Data", DbType:="VarChar(500)")>  _
	Public Property Bit24_Data() As String
		Get
			Return Me._Bit24_Data
		End Get
		Set
			If (String.Equals(Me._Bit24_Data, value) = false) Then
				Me._Bit24_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit25_Data", DbType:="VarChar(500)")>  _
	Public Property Bit25_Data() As String
		Get
			Return Me._Bit25_Data
		End Get
		Set
			If (String.Equals(Me._Bit25_Data, value) = false) Then
				Me._Bit25_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit26_Data", DbType:="VarChar(500)")>  _
	Public Property Bit26_Data() As String
		Get
			Return Me._Bit26_Data
		End Get
		Set
			If (String.Equals(Me._Bit26_Data, value) = false) Then
				Me._Bit26_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit27_Data", DbType:="VarChar(500)")>  _
	Public Property Bit27_Data() As String
		Get
			Return Me._Bit27_Data
		End Get
		Set
			If (String.Equals(Me._Bit27_Data, value) = false) Then
				Me._Bit27_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit28_Data", DbType:="VarChar(500)")>  _
	Public Property Bit28_Data() As String
		Get
			Return Me._Bit28_Data
		End Get
		Set
			If (String.Equals(Me._Bit28_Data, value) = false) Then
				Me._Bit28_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit29_Data", DbType:="VarChar(500)")>  _
	Public Property Bit29_Data() As String
		Get
			Return Me._Bit29_Data
		End Get
		Set
			If (String.Equals(Me._Bit29_Data, value) = false) Then
				Me._Bit29_Data = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit30_SSM", DbType:="VarChar(250)")>  _
	Public Property Bit30_SSM() As String
		Get
			Return Me._Bit30_SSM
		End Get
		Set
			If (String.Equals(Me._Bit30_SSM, value) = false) Then
				Me._Bit30_SSM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit31_SSM", DbType:="VarChar(250)")>  _
	Public Property Bit31_SSM() As String
		Get
			Return Me._Bit31_SSM
		End Get
		Set
			If (String.Equals(Me._Bit31_SSM, value) = false) Then
				Me._Bit31_SSM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bit32_Parity", DbType:="VarChar(50)")>  _
	Public Property Bit32_Parity() As String
		Get
			Return Me._Bit32_Parity
		End Get
		Set
			If (String.Equals(Me._Bit32_Parity, value) = false) Then
				Me._Bit32_Parity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDI_Option0", DbType:="VarChar(500)")>  _
	Public Property SDI_Option0() As String
		Get
			Return Me._SDI_Option0
		End Get
		Set
			If (String.Equals(Me._SDI_Option0, value) = false) Then
				Me._SDI_Option0 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDI_Option1", DbType:="VarChar(500)")>  _
	Public Property SDI_Option1() As String
		Get
			Return Me._SDI_Option1
		End Get
		Set
			If (String.Equals(Me._SDI_Option1, value) = false) Then
				Me._SDI_Option1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDI_Option2", DbType:="VarChar(500)")>  _
	Public Property SDI_Option2() As String
		Get
			Return Me._SDI_Option2
		End Get
		Set
			If (String.Equals(Me._SDI_Option2, value) = false) Then
				Me._SDI_Option2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDI_Option3", DbType:="VarChar(500)")>  _
	Public Property SDI_Option3() As String
		Get
			Return Me._SDI_Option3
		End Get
		Set
			If (String.Equals(Me._SDI_Option3, value) = false) Then
				Me._SDI_Option3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSM_Option0", DbType:="VarChar(500)")>  _
	Public Property SSM_Option0() As String
		Get
			Return Me._SSM_Option0
		End Get
		Set
			If (String.Equals(Me._SSM_Option0, value) = false) Then
				Me._SSM_Option0 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSM_Option1", DbType:="VarChar(500)")>  _
	Public Property SSM_Option1() As String
		Get
			Return Me._SSM_Option1
		End Get
		Set
			If (String.Equals(Me._SSM_Option1, value) = false) Then
				Me._SSM_Option1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSM_Option2", DbType:="VarChar(500)")>  _
	Public Property SSM_Option2() As String
		Get
			Return Me._SSM_Option2
		End Get
		Set
			If (String.Equals(Me._SSM_Option2, value) = false) Then
				Me._SSM_Option2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSM_Option3", DbType:="VarChar(500)")>  _
	Public Property SSM_Option3() As String
		Get
			Return Me._SSM_Option3
		End Get
		Set
			If (String.Equals(Me._SSM_Option3, value) = false) Then
				Me._SSM_Option3 = value
			End If
		End Set
	End Property
End Class
